{"version":3,"sources":["Card/images/picture1.jpg","Card/images/picture2.jpg","Card/images/picture3.jpg","Card/images/picture4.jpg","Card/images/picture5.jpg","Card/images/picture6.jpg","Card/images/picture7.jpg","Card/images/picture8.jpg","Card/images/picture9.jpg","Card/images/picture10.jpg","Card/images/picture11.jpg","Card/images/picture12.jpg","NavBar/index.jsx","Instructions/index.jsx","Card/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","className","score","best","Instructions","Picture","onClick","src","alt","App","state","debug","imagesClicked","pictureArray","picture1","picture2","picture3","picture4","picture5","picture6","picture7","picture8","picture9","picture10","picture11","picture12","sort","Math","random","alreadyClicked","picture","pictureShuffle","setState","newPictures","indexOf","newScore","render","map","pictureArr","i","Card","key","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8HAAAA,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,2QCc5BC,MAXf,SAAgBC,GACd,OACE,yBAAKC,UAAU,OACX,yBAAKA,UAAU,kBAAf,iBACA,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kBAAf,UAAwCD,EAAME,OAC9C,yBAAKD,UAAU,iBAAf,SAAsCD,EAAMG,Q,MCEvCC,MARf,WACE,OACE,yBAAKH,UAAU,eACX,0G,MCKOI,MARf,SAAiBL,GACf,OACE,4BAAQC,UAAU,8CAA8CK,QAASN,EAAMM,SAC7E,yBAAKC,IAAKP,EAAMO,IAAKC,IAAKR,EAAMQ,Q,mMCmEvBC,E,2MAtDTC,MACA,CACIC,OAAO,EACPT,MAAO,EACPU,cAAe,GACfC,aAAc,CAACC,IAAUC,IAAUC,IAAUC,IAAUC,IAAUC,IAAUC,IAAUC,IAAUC,IAAUC,IAAWC,IAAWC,KAAWC,MAAK,WAAa,MAAO,GAAMC,KAAKC,YAC9KzB,KAAM,G,EAGZ0B,eAAiB,SAACC,GAChB,IAAMC,EAAiB,CAACjB,IAAUC,IAAUC,IAAUC,IAAUC,IAAUC,IAAUC,IAAUC,IAAUC,IAAUC,IAAWC,IAAWC,KAAWC,MAAK,WAAa,MAAO,GAAMC,KAAKC,YACvL,EAAKI,SAAS,CAACnB,aAAakB,IAE5B,IAAME,EAAW,sBAAQ,EAAKvB,MAAME,eAAnB,CAAkCkB,IAGnD,GAFA,EAAKE,SAAS,CAACpB,cAAcqB,KAEsB,IAA/C,EAAKvB,MAAME,cAAcsB,QAAQJ,GAAiB,CACpD,IAAMK,EAAW,EAAKzB,MAAMR,MAC5B,EAAK8B,SAAS,CAAC9B,MAAMiC,EAAS,IAC3B,EAAKzB,MAAMR,OAAO,EAAKQ,MAAMP,MAC9B,EAAK6B,SAAS,CAAC7B,KAAKgC,EAAS,SAG/B,EAAKH,SAAS,CAAC9B,MAAM,EAAGU,cAAe,M,EAI3CwB,OAAS,WAET,OACE,yBAAKnC,UAAU,cACb,kBAAC,EAAD,CACEC,MAAO,EAAKQ,MAAMR,MAClBC,KAAM,EAAKO,MAAMP,OAEnB,kBAAC,EAAD,MACA,yBAAKF,UAAU,kBACZ,EAAKS,MAAMG,aAAawB,KAAI,SAACC,EAAYC,GAEtC,OACI,kBAACC,EAAD,CACEC,IAAKF,EAAE,EACPhC,IAAK+B,EACL9B,IAAK,UAAY+B,EACjBjC,QAAS,kBAAM,EAAKuB,eAAeS,Y,6BA9CrCI,aCLEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASZ,OAAO,kBAAC,EAAD,MAASa,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.50bda390.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/picture1.44ab609e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/picture2.c11384de.jpg\";","module.exports = __webpack_public_path__ + \"static/media/picture3.1e00d4a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/picture4.6d759907.jpg\";","module.exports = __webpack_public_path__ + \"static/media/picture5.2a01bebe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/picture6.997562d7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/picture7.bf00d826.jpg\";","module.exports = __webpack_public_path__ + \"static/media/picture8.97950dd3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/picture9.57d6d54c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/picture10.2b021ae9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/picture11.af2047dd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/picture12.534ff598.jpg\";","import React from 'react';\nimport './style.css';\n\nfunction NavBar(props) {\n  return (\n    <nav className=\"nav\">\n        <div className=\"col-md-4 title\">Natures charm</div>\n        <div className=\"col-md-4 track\"></div>\n          <div className=\"col-md-2 score\">Score: {props.score}</div>\n          <div className=\"col-md-2 best\">Best: {props.best}</div>\n    </nav>\n  );\n}\n\nexport default NavBar;  \n","import React from 'react';\nimport './style.css';\n\nfunction Instructions() {\n  return (\n    <div className=\"instruction\">\n        <h4>Click on an image to earn points, but don't click on any more than once.</h4>\n    </div>\n  );\n}\n\nexport default Instructions;\n","import React from 'react';\nimport './style.css';\n\nfunction Picture(props) {\n  return (\n    <button className=\"card border-primary border-dark pictureCard\" onClick={props.onClick}>\n      <img src={props.src} alt={props.alt} />\n    </button>\n  );\n}\n\nexport default Picture;\n","import React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './NavBar';\nimport Instructions from './Instructions';\nimport Card from './Card';\nimport picture1 from \"./Card/images/picture1.jpg\";\nimport picture2 from \"./Card/images/picture2.jpg\";\nimport picture3 from \"./Card/images/picture3.jpg\";\nimport picture4 from \"./Card/images/picture4.jpg\";\nimport picture5 from \"./Card/images/picture5.jpg\";\nimport picture6 from \"./Card/images/picture6.jpg\";\nimport picture7 from \"./Card/images/picture7.jpg\";\nimport picture8 from \"./Card/images/picture8.jpg\";\nimport picture9 from \"./Card/images/picture9.jpg\";\nimport picture10 from \"./Card/images/picture10.jpg\";\nimport picture11 from \"./Card/images/picture11.jpg\";\nimport picture12 from \"./Card/images/picture12.jpg\";\nclass App extends Component {\n  \n      state =\n      {\n          debug: true,\n          score: 0,\n          imagesClicked: [],\n          pictureArray: [picture1, picture2, picture3, picture4, picture5, picture6, picture7, picture8, picture9, picture10, picture11, picture12].sort(function() { return 0.5 - Math.random() }),\n          best: 0\n      }\n\n    alreadyClicked = (picture) => {\n      const pictureShuffle = [picture1, picture2, picture3, picture4, picture5, picture6, picture7, picture8, picture9, picture10, picture11, picture12].sort(function() { return 0.5 - Math.random() });\n      this.setState({pictureArray:pictureShuffle});\n\n      const newPictures = [ ...this.state.imagesClicked, picture];\n      this.setState({imagesClicked:newPictures});   \n      \n      if((this.state.imagesClicked.indexOf(picture) === -1)){\n        const newScore = this.state.score;\n        this.setState({score:newScore+1})\n        if(this.state.score>=this.state.best){\n          this.setState({best:newScore+1})\n        }\n      } else {\n        this.setState({score:0, imagesClicked: []})\n      }\n    };\n\n    render = () =>\n    {\n    return (\n      <div className=\"clickyGame\">\n        <NavBar \n          score={this.state.score}\n          best={this.state.best}\n        />\n        <Instructions />\n        <div className=\"picturesGoHere\">\n          {this.state.pictureArray.map((pictureArr, i) =>\n            {\n              return(\n                  <Card\n                    key={i+1}\n                    src={pictureArr}\n                    alt={'picture' + i}\n                    onClick={() => this.alreadyClicked(pictureArr)}\n                  />\n              )\n            })}\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}